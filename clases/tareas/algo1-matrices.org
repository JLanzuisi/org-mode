#+TITLE: Iteración en matrices. Recorridos.
#+SUBTITLE: Quinto ejercicio de la guía de arreglos y subprogramas en GCL.
#+AUTHOR: Jhonny Lanzuisi
#+EMAIL: jalb97@gmail.com
#+TAGS: :uni:algo1:
#+LANGUAGE: es
#+OPTIONS: toc:nil
#+LATEX_CLASS: article
#+HTML_MATHJAX: align: left indent: 5em tagside: left font: "STIX General"
#+HTML_MATHJAX: cancel.js noErrors.js
#+SETUPFILE: /home/jhonny/git/org-mode/style.css.org
#+LATEX_HEADER: \subject{Algoritmos y estructutras I}
#+LATEX_HEADER: \titlehead{Universidad Simón Bolívar.\hfill Caracas, Venezuela.}
#+LATEX_HEADER: \lstset{commentstyle=\upshape}

# ----LICENSE----
#  Copyright 2021 Jhonny Lanzuisi (jalb97@gmail.com)
#  More source files at github.com/JLanzuisi
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
# ---------------

#+BEGIN_EXPORT latex
{\let\thefootnote\relax
\footnotetext{
\sffamily\scriptsize
\noindent Copyright (C)  2021 Jhonny Lanzuisi.
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license can be found at \url{https://www.gnu.org/licenses/fdl-1.3.en.html}.
}
}
#+END_EXPORT

* Solución

El siguiente programa en GCL numera las entradas de una matriz \([0,M)\times[0,N)\)
de la forma que pide el enunciado.

#+BEGIN_SRC pascal
|[
const N,M: int;
var A: array [0,M) * [0,N) of int;
var i,j: int;

{N > 0 /\ M > 0}

j := 0;
A[M - 1][0] := 0;

{Invariante P1 (ver sección siguiente)}

do j != N ->
   if j = 0 ->
      {Invariante P2}
      i := M - 1;
      do i - 1 >= 0 ->
          A[i - 1][j] := A[i][j] + 1;
	  i := i - 1;
      od
   [] j != 0 /\ j mod 2 = 0 ->
      {Invariante P2}
      i := M - 1;
      A[i][j] := A[i][j - 1] + 1
      do i - 1 >= 0 ->
          A[i - 1][j] := A[i][j] + 1;
	  i := i - 1;
      od
   [] j mod 2 != 0 ->
      {Invariante P2}
      i := 0;
      A[i][j] := A[i][j - 1] + 1;
      do i + 1 != M ->
          A[i + 1][j] := A[i][j] + 1;
	  i := i + 1;
      od
   fi;
   j := j + 1
od
]|
#+END_SRC

** Invariantes

La iteración más exterior, que va de columna en columna,
tiene el siguiente invarinate P1.
La idea es que al momento de una iteración parcial,
ya se han numerado todas las columnas a la derecha de la columna actual.
#+BEGIN_EXPORT latex
\newcommand{\pone}{\text{P1}}
\newcommand{\ptwo}{\text{P2}}
\newcommand{\ppar}{\text{par}}
\newcommand{\impar}{\text{impar}}
#+END_EXPORT
\begin{align*}
 \pone& :\\
        & (\forall i,l ∣ 0\leq i< M \land 0 \leq l< j: (\ppar.l \implies A[i][l] = M\times l + (M-i-1))\\
        & \land(\impar.l \implies A[i][l] = M\times l +i-1))\\
	& \land 0\leq j < N.
\end{align*}



El siguiente invariante, P2, corresponde a las iteraciones internas.
Para estas, en una iteración parcial,
se han numerado las columnas a la izquierda de la actual y, además,
se han numerado tantos elementos de la columna actual como diga \(i\).
\begin{align*}
 \ptwo& :\\
        & (\forall i,l ∣ 0\leq i< M \land 0 \leq l< j: (\ppar.l \implies A[i][l] = M\times l + (M-i-1))\\
        & \land(\impar.l \implies A[i][l] = M\times l +i-1))\\
	& \land (\forall k,l\mid 0\leq k< i \land l=j: (\ppar.l \implies A[k][l] = M\times l + (M-k-1))\\
        & \land(\impar.l \implies A[k][l] = M\times l +k-1))\\
	& \land 0\leq j < N \land 0\leq i < M.
\end{align*}
